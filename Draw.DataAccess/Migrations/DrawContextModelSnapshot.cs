// <auto-generated />
using System;
using Draw.DataAccess.Concrete.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Draw.DataAccess.Migrations
{
    [DbContext(typeof(DrawContext))]
    partial class DrawContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.DrawBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.DrawCommand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DrawBoxId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DrawBoxId");

                    b.ToTable("DrawCommand");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LayerId")
                        .HasColumnType("int");

                    b.Property<int>("PenId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LayerId");

                    b.HasIndex("PenId");

                    b.HasIndex("TypeId");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.ElementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ElementTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "line"
                        },
                        new
                        {
                            Id = 2,
                            Name = "circle"
                        },
                        new
                        {
                            Id = 3,
                            Name = "rectangle"
                        },
                        new
                        {
                            Id = 4,
                            Name = "arc"
                        },
                        new
                        {
                            Id = 5,
                            Name = "ellips"
                        },
                        new
                        {
                            Id = 6,
                            Name = "spline"
                        });
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.Layer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DrawBoxId")
                        .HasColumnType("int");

                    b.Property<bool>("Lock")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("PenId")
                        .HasColumnType("int");

                    b.Property<float>("Thickness")
                        .HasPrecision(3, 1)
                        .HasColumnType("float");

                    b.Property<bool>("Visibility")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("DrawBoxId");

                    b.HasIndex("PenId");

                    b.ToTable("Layers");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.Pen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Blue")
                        .HasColumnType("int");

                    b.Property<int>("Green")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PenStyleId")
                        .HasColumnType("int");

                    b.Property<int>("Red")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PenStyleId");

                    b.HasIndex("UserId");

                    b.ToTable("Pens");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.PenStyle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PenStyles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "solid"
                        },
                        new
                        {
                            Id = 2,
                            Name = "dot"
                        });
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ElementId")
                        .HasColumnType("int");

                    b.Property<int>("PointTypeId")
                        .HasColumnType("int");

                    b.Property<double>("X")
                        .HasPrecision(10, 5)
                        .HasColumnType("double");

                    b.Property<double>("Y")
                        .HasPrecision(10, 5)
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ElementId");

                    b.HasIndex("PointTypeId");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.PointType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PointTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "end"
                        },
                        new
                        {
                            Id = 2,
                            Name = "center"
                        },
                        new
                        {
                            Id = 3,
                            Name = "middle"
                        });
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.Radius", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ElementId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasPrecision(8, 4)
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ElementId");

                    b.ToTable("Radiuses");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.SSAngle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ElementId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Value")
                        .HasPrecision(8, 4)
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ElementId");

                    b.ToTable("SSAngles");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.UserRefreshToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.ToTable("UserRefreshTokens");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "3c0329ec-619a-414b-88c8-1c7301428cfc",
                            ConcurrencyStamp = "b4103668-cf75-4335-9d8d-52c531d2c57d",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "115d708d-6c9f-449b-876b-6166d17f7109",
                            ConcurrencyStamp = "56bc7f8f-3ae7-4d57-9ccd-e159a20a2566",
                            Name = "manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = "30744922-3bb8-412c-a9c3-18284376d610",
                            ConcurrencyStamp = "7febc1c4-023b-4956-a453-fac0038f6e37",
                            Name = "user",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Web.BaseTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<string>("Explanation")
                        .HasColumnType("longtext");

                    b.Property<string>("GifUrl")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Header")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("IndexId")
                        .HasColumnType("int");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("MainTitleId")
                        .HasColumnType("int");

                    b.Property<string>("ResponeseType")
                        .HasColumnType("longtext");

                    b.Property<string>("Return")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortcutUrl1")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortcutUrl2")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortcutUrl3")
                        .HasColumnType("longtext");

                    b.Property<string>("TextUrl1")
                        .HasColumnType("longtext");

                    b.Property<string>("TextUrl2")
                        .HasColumnType("longtext");

                    b.Property<string>("TextUrl3")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("MainTitleId");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IndexId = 0,
                            MainTitleId = 3,
                            Title = "Draw Commands"
                        },
                        new
                        {
                            Id = 2,
                            IndexId = 0,
                            MainTitleId = 3,
                            Title = "Edit Commands"
                        },
                        new
                        {
                            Id = 3,
                            GifUrl = "endsnap.gif",
                            IndexId = 0,
                            LogoUrl = "closeendpoint.png",
                            MainTitleId = 5,
                            ShortcutUrl1 = "f6",
                            TextUrl1 = "End Snap.html",
                            Title = "End Snap"
                        },
                        new
                        {
                            Id = 4,
                            GifUrl = "middlesnap.gif",
                            IndexId = 0,
                            LogoUrl = "CloseMidPoint.png",
                            MainTitleId = 5,
                            ShortcutUrl1 = "f7",
                            TextUrl1 = "Middle Snap.html",
                            Title = "Middle Snap"
                        },
                        new
                        {
                            Id = 5,
                            GifUrl = "centersnap.gif",
                            IndexId = 0,
                            LogoUrl = "CloseCenter.png",
                            MainTitleId = 5,
                            ShortcutUrl1 = "f8",
                            TextUrl1 = "Center Snap.html",
                            Title = "Center Snap"
                        },
                        new
                        {
                            Id = 6,
                            GifUrl = "nearestsnap.gif",
                            IndexId = 0,
                            LogoUrl = "CloseNearest.png",
                            MainTitleId = 5,
                            ShortcutUrl1 = "f9",
                            TextUrl1 = "Nearest Snap.html",
                            Title = "Nearest Snap"
                        },
                        new
                        {
                            Id = 7,
                            GifUrl = "intersectionsnap.gif",
                            IndexId = 0,
                            LogoUrl = "CloseIntersection.png",
                            MainTitleId = 5,
                            ShortcutUrl1 = "f10",
                            TextUrl1 = "Intersection Snap.html",
                            Title = "Intersection Snap"
                        },
                        new
                        {
                            Id = 8,
                            GifUrl = "polarmod.gif",
                            IndexId = 0,
                            LogoUrl = "ClosePain.png",
                            MainTitleId = 5,
                            ShortcutUrl1 = "f4",
                            TextUrl1 = "Polar Mode.html",
                            Title = "Polar Mode"
                        },
                        new
                        {
                            Id = 9,
                            GifUrl = "orthomod.gif",
                            IndexId = 0,
                            LogoUrl = "CloseOrtho.png",
                            MainTitleId = 5,
                            ShortcutUrl1 = "f3",
                            TextUrl1 = "Ortho Mode.html",
                            Title = "Ortho Mode"
                        },
                        new
                        {
                            Id = 10,
                            GifUrl = "gridsnap.gif",
                            IndexId = 0,
                            LogoUrl = "CloseGrid.png",
                            MainTitleId = 5,
                            ShortcutUrl1 = "f5",
                            TextUrl1 = "Grid Snap.html",
                            Title = "Grid Snap"
                        },
                        new
                        {
                            Id = 11,
                            IndexId = 0,
                            LogoUrl = "linewidthBtnClose.png",
                            MainTitleId = 8,
                            TextUrl1 = "Line Width.html",
                            Title = "Line Width"
                        },
                        new
                        {
                            Id = 12,
                            GifUrl = "add.gif",
                            IndexId = 0,
                            LogoUrl = "addBtn.png",
                            MainTitleId = 2,
                            TextUrl1 = "Add.html",
                            Title = "Add"
                        },
                        new
                        {
                            Id = 13,
                            GifUrl = "open.gif",
                            IndexId = 0,
                            LogoUrl = "openfile.png",
                            MainTitleId = 2,
                            TextUrl1 = "Open.html",
                            Title = "Open"
                        },
                        new
                        {
                            Id = 14,
                            GifUrl = "push.gif",
                            IndexId = 0,
                            LogoUrl = "saveCloud.png",
                            MainTitleId = 2,
                            TextUrl1 = "Push.html",
                            Title = "Push"
                        },
                        new
                        {
                            Id = 15,
                            GifUrl = "pull.gif",
                            IndexId = 0,
                            LogoUrl = "getCloud.png",
                            MainTitleId = 2,
                            TextUrl1 = "Pull.html",
                            Title = "Pull"
                        },
                        new
                        {
                            Id = 16,
                            IndexId = 0,
                            MainTitleId = 2,
                            TextUrl1 = "Save.html",
                            Title = "Save"
                        },
                        new
                        {
                            Id = 17,
                            IndexId = 0,
                            MainTitleId = 2,
                            TextUrl1 = "Save Cloud.html",
                            Title = "Save Cloud"
                        },
                        new
                        {
                            Id = 18,
                            Body = "StartCommand.json",
                            Header = "/Draw/startCommand",
                            IndexId = 2,
                            MainTitleId = 10,
                            ResponeseType = "POST",
                            TextUrl1 = "StartCommand.html",
                            Title = "Start Command"
                        },
                        new
                        {
                            Id = 19,
                            Body = "AddCoordinate.json",
                            Header = "/Draw/addCoordinate",
                            IndexId = 2,
                            MainTitleId = 10,
                            ResponeseType = "POST",
                            TextUrl1 = "AddCoordinate.html",
                            Title = "Add Coordinate"
                        },
                        new
                        {
                            Id = 20,
                            Header = "/Draw/stopCommand",
                            IndexId = 2,
                            MainTitleId = 10,
                            ResponeseType = "PUT",
                            TextUrl1 = "StopCommand.html",
                            Title = "Stop Command"
                        },
                        new
                        {
                            Id = 21,
                            Body = "SetRadius.json",
                            Header = "/Draw/setRadius",
                            IndexId = 2,
                            MainTitleId = 10,
                            ResponeseType = "PUT",
                            TextUrl1 = "SetRadius.html",
                            Title = "Set Radius"
                        },
                        new
                        {
                            Id = 22,
                            Body = "SetElementsId.json",
                            Header = "/Draw/setElementsId",
                            IndexId = 2,
                            MainTitleId = 10,
                            ResponeseType = "PUT",
                            TextUrl1 = "SetElementsId.html",
                            Title = "Set Elements Id"
                        },
                        new
                        {
                            Id = 23,
                            Header = "/Draw/setIsFinish?finish=true",
                            IndexId = 2,
                            MainTitleId = 10,
                            ResponeseType = "PUT",
                            TextUrl1 = "SetIsFinish.html",
                            Title = "Set Is Finish"
                        },
                        new
                        {
                            Id = 24,
                            Body = "SaveDraw.json",
                            Header = "/Draw/saveDraw",
                            IndexId = 2,
                            MainTitleId = 10,
                            ResponeseType = "POST",
                            TextUrl1 = "SaveDraw.html",
                            Title = "Save Draw"
                        },
                        new
                        {
                            Id = 25,
                            Body = "ReadDraw.json",
                            Header = "/Draw/readDraw",
                            IndexId = 2,
                            MainTitleId = 10,
                            ResponeseType = "POST",
                            TextUrl1 = "ReadDraw.html",
                            Title = "Read Draw"
                        },
                        new
                        {
                            Id = 26,
                            Header = "/DrawBox/drawBoxes",
                            IndexId = 2,
                            MainTitleId = 11,
                            ResponeseType = "GET",
                            TextUrl1 = "DrawBoxes.html",
                            Title = "Draw Boxes"
                        },
                        new
                        {
                            Id = 27,
                            Body = "DrawBoxesAdd.json",
                            Header = "/DrawBox/drawBoxes/add",
                            IndexId = 2,
                            MainTitleId = 11,
                            ResponeseType = "GET",
                            TextUrl1 = "DrawBoxesAdd.html",
                            Title = "Draw Boxes Add"
                        },
                        new
                        {
                            Id = 28,
                            Body = "DrawBoxesDelete.json",
                            Header = "/DrawBox/drawBoxes/delete",
                            IndexId = 2,
                            MainTitleId = 11,
                            ResponeseType = "DELETE",
                            TextUrl1 = "DrawBoxesDelete.html",
                            Title = "Draw Boxes Delete"
                        },
                        new
                        {
                            Id = 29,
                            Body = "DrawBoxesUpdate.json",
                            Header = "/DrawBox/drawBoxes/update",
                            IndexId = 2,
                            MainTitleId = 11,
                            ResponeseType = "PUT",
                            TextUrl1 = "DrawBoxesUpdate.html",
                            Title = "Draw Boxes Update"
                        },
                        new
                        {
                            Id = 30,
                            Header = "/DrawBox/drawBoxes/{id}",
                            IndexId = 2,
                            MainTitleId = 11,
                            ResponeseType = "GET",
                            TextUrl1 = "DrawBoxId.html",
                            Title = "Draw Box"
                        },
                        new
                        {
                            Id = 31,
                            Header = "/DrawBox/drawBoxes/{id}/layers",
                            IndexId = 2,
                            MainTitleId = 11,
                            ResponeseType = "GET",
                            TextUrl1 = "DrawBoxIdLayers.html",
                            Title = "Draw Box With Layers"
                        },
                        new
                        {
                            Id = 32,
                            Header = "/Element/elements",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "GET",
                            TextUrl1 = "Elements.html",
                            Title = "Elements"
                        },
                        new
                        {
                            Id = 33,
                            Header = "/Element/elementswithatt",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "GET",
                            TextUrl1 = "ElementsWithAtt.html",
                            Title = "Elements With Attributes"
                        },
                        new
                        {
                            Id = 34,
                            Header = "/Element/elementsbydraw?drawId=0",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "GET",
                            TextUrl1 = "ElementsByDraw.html",
                            Title = "Elements By Draw"
                        },
                        new
                        {
                            Id = 35,
                            Header = "/Element/elementsbydrawwithatt?drawId=0",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "GET",
                            TextUrl1 = "ElementsByDrawWithAtt.html",
                            Title = "Elements By Draw With Attributes"
                        },
                        new
                        {
                            Id = 36,
                            Header = "/Element/elementsbylayer?layerId=0",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "GET",
                            TextUrl1 = "ElementsByLayer.html",
                            Title = "Elements By Layer"
                        },
                        new
                        {
                            Id = 37,
                            Header = "/Element/elementsbylayerwithatt?layerId=0",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "GET",
                            TextUrl1 = "ElementsByLayerWithAtt.html",
                            Title = "Elements By Layer With Attributes"
                        },
                        new
                        {
                            Id = 38,
                            Body = "ElementsAdd.json",
                            Header = "/Element/elements/add",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "POST",
                            TextUrl1 = "ElementsAdd.html",
                            Title = "Elements Add"
                        },
                        new
                        {
                            Id = 39,
                            Body = "ElementsDelete.json",
                            Header = "/Element/elements/delete",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "DELETE",
                            TextUrl1 = "ElementsDelete.html",
                            Title = "Elements Delete"
                        },
                        new
                        {
                            Id = 40,
                            Body = "ElementsUpdate.json",
                            Header = "/Element/elements/update",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "PUT",
                            TextUrl1 = "ElementsUpdate.html",
                            Title = "Elements Update"
                        },
                        new
                        {
                            Id = 41,
                            Header = "/Element/elements/{id}",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "GET",
                            TextUrl1 = "ElementId.html",
                            Title = "Element"
                        },
                        new
                        {
                            Id = 42,
                            Header = "/Element/elements/{id}/elementType",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "GET",
                            TextUrl1 = "ElementIdElementType.html",
                            Title = "Element Element Type"
                        },
                        new
                        {
                            Id = 43,
                            Header = "/Element/elements/{id}/pen",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "GET",
                            TextUrl1 = "ElementIdPen.html",
                            Title = "Element Pen"
                        },
                        new
                        {
                            Id = 44,
                            Header = "/Element/elements/{id}/layer",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "GET",
                            TextUrl1 = "ElementIdLayer.html",
                            Title = "Element Layer"
                        },
                        new
                        {
                            Id = 45,
                            Header = "/Element/elements/{id}/radiuses",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "GET",
                            TextUrl1 = "ElementIdRadiuses.html",
                            Title = "Element Radiuses"
                        },
                        new
                        {
                            Id = 46,
                            Header = "/Element/elements/{id}/ssangles",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "GET",
                            TextUrl1 = "ElementIdSSAngles.html",
                            Title = "Element SSAngles"
                        },
                        new
                        {
                            Id = 47,
                            Header = "/Element/elements/{id}/points",
                            IndexId = 2,
                            MainTitleId = 12,
                            ResponeseType = "GET",
                            TextUrl1 = "ElementIdPoints.html",
                            Title = "Element Points"
                        },
                        new
                        {
                            Id = 48,
                            Header = "/ElementType/elementTypes",
                            IndexId = 2,
                            MainTitleId = 13,
                            ResponeseType = "GET",
                            TextUrl1 = "ElementTypes.html",
                            Title = "Element Types"
                        },
                        new
                        {
                            Id = 49,
                            Header = "/ElementType/elementTypes/{id}",
                            IndexId = 2,
                            MainTitleId = 13,
                            ResponeseType = "GET",
                            TextUrl1 = "ElementType.html",
                            Title = "Element Type"
                        },
                        new
                        {
                            Id = 50,
                            Body = "ElementTypeAdd.json",
                            Header = "/ElementType/elementTypes/add",
                            IndexId = 2,
                            MainTitleId = 13,
                            ResponeseType = "POST",
                            TextUrl1 = "ElementTypeAdd.html",
                            Title = "Element Types Add"
                        },
                        new
                        {
                            Id = 51,
                            Body = "ElementTypeDelete.json",
                            Header = "/ElementType/elementTypes/delete",
                            IndexId = 2,
                            MainTitleId = 13,
                            ResponeseType = "DELETE",
                            TextUrl1 = "ElementTypeDelete.html",
                            Title = "Element Types Delete"
                        },
                        new
                        {
                            Id = 52,
                            Body = "ElementTypeUpdate.json",
                            Header = "/ElementType/elementTypes/update",
                            IndexId = 2,
                            MainTitleId = 13,
                            ResponeseType = "PUT",
                            TextUrl1 = "ElementTypeUpdate.html",
                            Title = "Element Types Update"
                        },
                        new
                        {
                            Id = 53,
                            Header = "/Layer/layers",
                            IndexId = 2,
                            MainTitleId = 14,
                            ResponeseType = "GET",
                            TextUrl1 = "Layers.html",
                            Title = "Layers"
                        },
                        new
                        {
                            Id = 54,
                            Header = "/Layer/layers?drawId=0",
                            IndexId = 2,
                            MainTitleId = 14,
                            ResponeseType = "POST",
                            TextUrl1 = "LayersDrawId.html",
                            Title = "Draw Layers"
                        },
                        new
                        {
                            Id = 55,
                            Header = "/Layer/layerswithpen?drawId=0",
                            IndexId = 2,
                            MainTitleId = 14,
                            ResponeseType = "POST",
                            TextUrl1 = "LayersDrawIdWithPen.html",
                            Title = "Draw Layers With Pen"
                        },
                        new
                        {
                            Id = 56,
                            Body = "LayersAdd.json",
                            Header = "/Layer/layers/add",
                            IndexId = 2,
                            MainTitleId = 14,
                            ResponeseType = "POST",
                            TextUrl1 = "LayersAdd.html",
                            Title = "Layers Add"
                        },
                        new
                        {
                            Id = 57,
                            Body = "LayersDelete.json",
                            Header = "/Layer/layers/delete",
                            IndexId = 2,
                            MainTitleId = 14,
                            ResponeseType = "DELETE",
                            TextUrl1 = "LayersDelete.html",
                            Title = "Layers Delete"
                        },
                        new
                        {
                            Id = 58,
                            Body = "LayersUpdate.json",
                            Header = "/Layer/layers/update",
                            IndexId = 2,
                            MainTitleId = 14,
                            ResponeseType = "PUT",
                            TextUrl1 = "LayersUpdate.html",
                            Title = "Layers Update"
                        },
                        new
                        {
                            Id = 59,
                            Header = "/Layer/layers/{id}",
                            IndexId = 2,
                            MainTitleId = 14,
                            ResponeseType = "GET",
                            TextUrl1 = "Layer.html",
                            Title = "Layer"
                        },
                        new
                        {
                            Id = 60,
                            Header = "/Layer/layers/{id}/elements",
                            IndexId = 2,
                            MainTitleId = 14,
                            ResponeseType = "GET",
                            TextUrl1 = "Layerelements.html",
                            Title = "Layer Elements"
                        },
                        new
                        {
                            Id = 61,
                            Header = "/Layer/layers/{id}/pen",
                            IndexId = 2,
                            MainTitleId = 14,
                            ResponeseType = "GET",
                            TextUrl1 = "Layerpen.html",
                            Title = "Layer Pen"
                        },
                        new
                        {
                            Id = 62,
                            Header = "/Pen/pens",
                            IndexId = 2,
                            MainTitleId = 15,
                            ResponeseType = "GET",
                            TextUrl1 = "Pens.html",
                            Title = "Pens"
                        },
                        new
                        {
                            Id = 63,
                            Header = "/Pen/penswithatt",
                            IndexId = 2,
                            MainTitleId = 15,
                            ResponeseType = "GET",
                            TextUrl1 = "Penswithatt.html",
                            Title = "Pens With Attributes"
                        },
                        new
                        {
                            Id = 64,
                            Header = "/Pen/pens/{id}",
                            IndexId = 2,
                            MainTitleId = 15,
                            ResponeseType = "GET",
                            TextUrl1 = "Pen.html",
                            Title = "Pen"
                        },
                        new
                        {
                            Id = 65,
                            Header = "/Pen/pens/{id}/penstyle",
                            IndexId = 2,
                            MainTitleId = 15,
                            ResponeseType = "GET",
                            TextUrl1 = "Penpenstyle.html",
                            Title = "Pen PenStyle"
                        },
                        new
                        {
                            Id = 66,
                            Body = "Pensadd.json",
                            Header = "/Pen/pens/add",
                            IndexId = 2,
                            MainTitleId = 15,
                            ResponeseType = "POST",
                            TextUrl1 = "Penadd.html",
                            Title = "Pen Add"
                        },
                        new
                        {
                            Id = 67,
                            Body = "Pensdelete.json",
                            Header = "/Pen/pens/delete",
                            IndexId = 2,
                            MainTitleId = 15,
                            ResponeseType = "DELETE",
                            TextUrl1 = "Pendelete.html",
                            Title = "Pen Delete"
                        },
                        new
                        {
                            Id = 68,
                            Body = "Pensupdate.json",
                            Header = "/Pen/pens/update",
                            IndexId = 2,
                            MainTitleId = 15,
                            ResponeseType = "PUT",
                            TextUrl1 = "Penupdate.html",
                            Title = "Pen Update"
                        },
                        new
                        {
                            Id = 69,
                            Header = "/PenStyles/penstyles",
                            IndexId = 2,
                            MainTitleId = 16,
                            ResponeseType = "GET",
                            TextUrl1 = "Penstyles.html",
                            Title = "PenStyles"
                        },
                        new
                        {
                            Id = 70,
                            Header = "/PenStyles/penstyles/{id}",
                            IndexId = 2,
                            MainTitleId = 16,
                            ResponeseType = "GET",
                            TextUrl1 = "Penstyle.html",
                            Title = "PenStyle"
                        },
                        new
                        {
                            Id = 71,
                            Body = "Penstyleadd.json",
                            Header = "/PenStyles/penstyles/add",
                            IndexId = 2,
                            MainTitleId = 16,
                            ResponeseType = "POST",
                            TextUrl1 = "Penstylesadd.html",
                            Title = "PenStyles Add"
                        },
                        new
                        {
                            Id = 72,
                            Body = "Penstyledelete.json",
                            Header = "/PenStyles/penstyles/delete",
                            IndexId = 2,
                            MainTitleId = 16,
                            ResponeseType = "DELETE",
                            TextUrl1 = "Penstylesdelete.html",
                            Title = "PenStyles Delete"
                        },
                        new
                        {
                            Id = 73,
                            Body = "Penstyleupdate.json",
                            Header = "/PenStyles/penstyles/update",
                            IndexId = 2,
                            MainTitleId = 16,
                            ResponeseType = "PUT",
                            TextUrl1 = "Penstylesupdate.html",
                            Title = "PenStyles Update"
                        },
                        new
                        {
                            Id = 74,
                            Header = "/Point/points",
                            IndexId = 2,
                            MainTitleId = 17,
                            ResponeseType = "GET",
                            TextUrl1 = "Points.html",
                            Title = "Points"
                        },
                        new
                        {
                            Id = 75,
                            Header = "/Point/pointsbyelement?elementId=0",
                            IndexId = 2,
                            MainTitleId = 17,
                            ResponeseType = "GET",
                            TextUrl1 = "Pointsbyelement.html",
                            Title = "Points By Element"
                        },
                        new
                        {
                            Id = 76,
                            Header = "/Point/pointsbylayer?layerId=0",
                            IndexId = 2,
                            MainTitleId = 17,
                            ResponeseType = "GET",
                            TextUrl1 = "Pointsbylayer.html",
                            Title = "Points By Layer"
                        },
                        new
                        {
                            Id = 77,
                            Header = "/Point/pointsbydraw?drawId=0",
                            IndexId = 2,
                            MainTitleId = 17,
                            ResponeseType = "GET",
                            TextUrl1 = "Pointsbydraw.html",
                            Title = "Points By Draw"
                        },
                        new
                        {
                            Id = 78,
                            Body = "Pointsadd.json",
                            Header = "/Point/points/add",
                            IndexId = 2,
                            MainTitleId = 17,
                            ResponeseType = "GET",
                            TextUrl1 = "Pointsadd.html",
                            Title = "Points Add"
                        },
                        new
                        {
                            Id = 79,
                            Body = "Pointsdelete.json",
                            Header = "/Point/points/delete",
                            IndexId = 2,
                            MainTitleId = 17,
                            ResponeseType = "DELETE",
                            TextUrl1 = "Pointsdelete.html",
                            Title = "Points Delete"
                        },
                        new
                        {
                            Id = 80,
                            Body = "Pointsupdate.json",
                            Header = "/Point/points/update",
                            IndexId = 2,
                            MainTitleId = 17,
                            ResponeseType = "PUT",
                            TextUrl1 = "Pointsupdate.html",
                            Title = "Points Update"
                        },
                        new
                        {
                            Id = 81,
                            Header = "/Point/points/{id}",
                            IndexId = 2,
                            MainTitleId = 17,
                            ResponeseType = "GET",
                            TextUrl1 = "Point.html",
                            Title = "Point"
                        },
                        new
                        {
                            Id = 82,
                            Header = "/Point/points/{id}/element",
                            IndexId = 2,
                            MainTitleId = 17,
                            ResponeseType = "GET",
                            TextUrl1 = "Pointelement.html",
                            Title = "Point Element"
                        },
                        new
                        {
                            Id = 83,
                            Header = "/Point/points/{id}/pointtype",
                            IndexId = 2,
                            MainTitleId = 17,
                            ResponeseType = "GET",
                            TextUrl1 = "Pointpointtype.html",
                            Title = "Point PointType"
                        },
                        new
                        {
                            Id = 84,
                            Header = "/PointType/pointtypes",
                            IndexId = 2,
                            MainTitleId = 18,
                            ResponeseType = "GET",
                            TextUrl1 = "PointTypes.html",
                            Title = "PointTypes"
                        },
                        new
                        {
                            Id = 85,
                            Header = "/PointType/pointtypes/{id}",
                            IndexId = 2,
                            MainTitleId = 18,
                            ResponeseType = "GET",
                            TextUrl1 = "PointType.html",
                            Title = "PointType"
                        },
                        new
                        {
                            Id = 86,
                            Body = "pointtypeadd",
                            Header = "/PointType/pointtypes/add",
                            IndexId = 2,
                            MainTitleId = 18,
                            ResponeseType = "POST",
                            TextUrl1 = "PointTypeadd.html",
                            Title = "PointType Add"
                        },
                        new
                        {
                            Id = 87,
                            Body = "pointtypedelete.json",
                            Header = "/PointType/pointtypes/delete",
                            IndexId = 2,
                            MainTitleId = 18,
                            ResponeseType = "DELETE",
                            TextUrl1 = "PointTypedelete.html",
                            Title = "PointType Delete"
                        },
                        new
                        {
                            Id = 88,
                            Body = "pointtypeupdate.json",
                            Header = "/PointType/pointtypes/update",
                            IndexId = 2,
                            MainTitleId = 18,
                            ResponeseType = "PUT",
                            TextUrl1 = "PointTypeupdate.html",
                            Title = "PointType Update"
                        },
                        new
                        {
                            Id = 89,
                            Header = "/Radius/radiuses",
                            IndexId = 2,
                            MainTitleId = 19,
                            ResponeseType = "GET",
                            TextUrl1 = "Radiuses.html",
                            Title = "Radiuses"
                        },
                        new
                        {
                            Id = 90,
                            Body = "radiusesadd",
                            Header = "/Radius/radiuses/add",
                            IndexId = 2,
                            MainTitleId = 19,
                            ResponeseType = "POST",
                            TextUrl1 = "Radiusesadd.html",
                            Title = "Radiuses Add"
                        },
                        new
                        {
                            Id = 91,
                            Body = "radiusesdelete.json",
                            Header = "/Radius/radiuses/delete",
                            IndexId = 2,
                            MainTitleId = 19,
                            ResponeseType = "DELETE",
                            TextUrl1 = "Radiusesdelete.html",
                            Title = "Radiuses Delete"
                        },
                        new
                        {
                            Id = 92,
                            Body = "radiusesupdate.json",
                            Header = "/Radius/radiuses/update",
                            IndexId = 2,
                            MainTitleId = 19,
                            ResponeseType = "PUT",
                            TextUrl1 = "Radiusesupdate.html",
                            Title = "Radiuses Update"
                        },
                        new
                        {
                            Id = 93,
                            Header = "/Radius/radiuses/{id}",
                            IndexId = 2,
                            MainTitleId = 19,
                            ResponeseType = "GET",
                            TextUrl1 = "Radiuse.html",
                            Title = "Radiuse"
                        },
                        new
                        {
                            Id = 94,
                            Header = "/SSAngle/ssangles/{id}",
                            IndexId = 2,
                            MainTitleId = 20,
                            ResponeseType = "GET",
                            TextUrl1 = "SSAngle.html",
                            Title = "SSAngle"
                        },
                        new
                        {
                            Id = 95,
                            Header = "/SSAngle/ssangles",
                            IndexId = 2,
                            MainTitleId = 20,
                            ResponeseType = "GET",
                            TextUrl1 = "SSAngles.html",
                            Title = "SSAngles"
                        },
                        new
                        {
                            Id = 96,
                            Body = "SSAnglesadd.json",
                            Header = "/SSAngle/ssangles/add",
                            IndexId = 2,
                            MainTitleId = 20,
                            ResponeseType = "POST",
                            TextUrl1 = "SSAnglesadd.html",
                            Title = "SSAngles Add"
                        },
                        new
                        {
                            Id = 97,
                            Body = "SSAnglesdelete.json",
                            Header = "/SSAngle/ssangles/delete",
                            IndexId = 2,
                            MainTitleId = 20,
                            ResponeseType = "DELETE",
                            TextUrl1 = "SSAnglesdelete.html",
                            Title = "SSAngles Delete"
                        },
                        new
                        {
                            Id = 98,
                            Body = "SSAnglesupdate.json",
                            Header = "/SSAngle/ssangles/update",
                            IndexId = 2,
                            MainTitleId = 20,
                            ResponeseType = "PUT",
                            TextUrl1 = "SSAnglesupdate.html",
                            Title = "SSAngles Update"
                        },
                        new
                        {
                            Id = 99,
                            Body = "findTwoPointsLength.json",
                            Header = "/findTwoPointsLength/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findTwoPointsLength.html",
                            Title = "Find Two Point Length"
                        },
                        new
                        {
                            Id = 100,
                            Body = "findCenterAndRadius.json",
                            Header = "/findCenterAndRadius/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findCenterAndRadius.html",
                            Title = "Find Center And Radius"
                        },
                        new
                        {
                            Id = 101,
                            Body = "findToSlopeLine.json",
                            Header = "/findToSlopeLine/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findToSlopeLine.html",
                            Title = "Find To Slope Line"
                        },
                        new
                        {
                            Id = 102,
                            Body = "findDegreeLineSlope.json",
                            Header = "/findDegreeLineSlope/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findDegreeLineSlope.html",
                            Title = "Find Degree Line Slope"
                        },
                        new
                        {
                            Id = 103,
                            Body = "findDegreeLineTwoPoints.json",
                            Header = "/findDegreeLineTwoPoints/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findDegreeLineTwoPoints.html",
                            Title = "Find Degree Line Two Points"
                        },
                        new
                        {
                            Id = 104,
                            Body = "convertDegreeToSlope.json",
                            Header = "/convertDegreeToSlope/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "convertDegreeToSlope.html",
                            Title = "Convert Degree To Slope"
                        },
                        new
                        {
                            Id = 105,
                            Body = "convertRadianToDegree.json",
                            Header = "/convertRadianToDegree/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "convertRadianToDegree.html",
                            Title = "Convert Radian To Degree"
                        },
                        new
                        {
                            Id = 106,
                            Body = "convertDegreeToRadians.json",
                            Header = "/convertDegreeToRadians/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "convertDegreeToRadians.html",
                            Title = "Convert Degree To Radians"
                        },
                        new
                        {
                            Id = 107,
                            Body = "findCenterPointToLine.json",
                            Header = "/findCenterPointToLine/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findCenterPointToLine.html",
                            Title = "Find Center Point To Line"
                        },
                        new
                        {
                            Id = 108,
                            Body = "findDegreeToBetweenTwoLines.json",
                            Header = "/findDegreeToBetweenTwoLines/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findDegreeToBetweenTwoLines.html",
                            Title = "Find Degree To Between Two Lines"
                        },
                        new
                        {
                            Id = 109,
                            Body = "findDotProductToTwoPoints.json",
                            Header = "/findDotProductToTwoPoints/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findDotProductToTwoPoints.html",
                            Title = "Find Dot Product To Two Points"
                        },
                        new
                        {
                            Id = 110,
                            Body = "findDifferenceTwoPoints.json",
                            Header = "/findDifferenceTwoPoints/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findDifferenceTwoPoints.html",
                            Title = "Find Difference Two Points"
                        },
                        new
                        {
                            Id = 111,
                            Body = "wherePointOnLine.json",
                            Header = "/wherePointOnLine/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "wherePointOnLine.html",
                            Title = "Where Point On Line"
                        },
                        new
                        {
                            Id = 112,
                            Body = "findInsectionPointToTwoLines.json",
                            Header = "/findInsectionPointToTwoLines/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findInsectionPointToTwoLines.html",
                            Title = "Find Insection Point To Two Lines"
                        },
                        new
                        {
                            Id = 113,
                            Body = "findPointLength.json",
                            Header = "/findPointLength/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findPointLength.html",
                            Title = "Find Point Length"
                        },
                        new
                        {
                            Id = 114,
                            Body = "wherePointZone.json",
                            Header = "/wherePointZone/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "wherePointZone.html",
                            Title = "Where Point Zone"
                        },
                        new
                        {
                            Id = 115,
                            Body = "findNearetPoint.json",
                            Header = "/findNearetPoint/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findNearetPoint.html",
                            Title = "Find Nearest Point"
                        },
                        new
                        {
                            Id = 116,
                            Body = "findStartAndStopAngle.json",
                            Header = "/findStartAndStopAngle/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findStartAndStopAngle.html",
                            Title = "Find Start And Stop Angle"
                        },
                        new
                        {
                            Id = 117,
                            Body = "findStartAndStopAngleTwoPoint.json",
                            Header = "/findStartAndStopAngleTwoPoint/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findStartAndStopAngleTwoPoint.html",
                            Title = "Find Start And Stop Angle Two Point"
                        },
                        new
                        {
                            Id = 118,
                            Body = "findPointOnCircle.json",
                            Header = "/findPointOnCircle/",
                            IndexId = 3,
                            MainTitleId = 22,
                            ResponeseType = "POST",
                            TextUrl1 = "findPointOnCircle.html",
                            Title = "Find Point On Circle"
                        },
                        new
                        {
                            Id = 119,
                            Body = "createuser.json",
                            Header = "/User/createuser",
                            IndexId = 4,
                            MainTitleId = 24,
                            ResponeseType = "POST",
                            TextUrl1 = "createuser.html",
                            Title = "Create User"
                        },
                        new
                        {
                            Id = 120,
                            Header = "/User/getuser",
                            IndexId = 4,
                            MainTitleId = 24,
                            ResponeseType = "GET",
                            TextUrl1 = "getuser.html",
                            Title = "Get User"
                        },
                        new
                        {
                            Id = 121,
                            Body = "createtoken.json",
                            Header = "/Auth/createtoken",
                            IndexId = 4,
                            MainTitleId = 25,
                            ResponeseType = "POST",
                            TextUrl1 = "createtoken.html",
                            Title = "Create Token"
                        },
                        new
                        {
                            Id = 122,
                            Body = "createtokenbyclient.json",
                            Header = "/Auth/createtokenbyclient",
                            IndexId = 4,
                            MainTitleId = 25,
                            ResponeseType = "POST",
                            TextUrl1 = "createtokenbyclient.html",
                            Title = "Create Token By Client"
                        },
                        new
                        {
                            Id = 123,
                            Body = "createtokenbyrefreshtoken.json",
                            Header = "/Auth/createtokenbyrefreshtoken",
                            IndexId = 4,
                            MainTitleId = 25,
                            ResponeseType = "POST",
                            TextUrl1 = "createtokenbyrefreshtoken.html",
                            Title = "Create Token By Refresh Token"
                        },
                        new
                        {
                            Id = 124,
                            Body = "revokerefreshtoken.json",
                            Header = "/Auth/revokerefreshtoken",
                            IndexId = 4,
                            MainTitleId = 25,
                            ResponeseType = "POST",
                            TextUrl1 = "revokerefreshtoken.html",
                            Title = "Revoke Refresh Token"
                        });
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Web.MainTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<string>("Explanation")
                        .HasColumnType("longtext");

                    b.Property<string>("GifUrl")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Header")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("IndexId")
                        .HasColumnType("int");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ResponeseType")
                        .HasColumnType("longtext");

                    b.Property<string>("Return")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortcutUrl1")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortcutUrl2")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortcutUrl3")
                        .HasColumnType("longtext");

                    b.Property<string>("TextUrl1")
                        .HasColumnType("longtext");

                    b.Property<string>("TextUrl2")
                        .HasColumnType("longtext");

                    b.Property<string>("TextUrl3")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("MainTitles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IndexId = 0,
                            TextUrl1 = "DrawCAD.html",
                            Title = "DrawCAD"
                        },
                        new
                        {
                            Id = 2,
                            IndexId = 0,
                            TextUrl1 = "File.html",
                            Title = "File"
                        },
                        new
                        {
                            Id = 3,
                            IndexId = 0,
                            TextUrl1 = "Commands.html",
                            Title = "Commands"
                        },
                        new
                        {
                            Id = 4,
                            IndexId = 0,
                            LogoUrl = "Layer.png",
                            TextUrl1 = "Layer.html",
                            Title = "Layer"
                        },
                        new
                        {
                            Id = 5,
                            IndexId = 0,
                            TextUrl1 = "Snaps.html",
                            Title = "Snaps"
                        },
                        new
                        {
                            Id = 6,
                            IndexId = 0,
                            TextUrl1 = "Handles.html",
                            Title = "Handles"
                        },
                        new
                        {
                            Id = 7,
                            IndexId = 0,
                            LogoUrl = "elementInfo.png",
                            TextUrl1 = "Element Information.html",
                            Title = "Element Information"
                        },
                        new
                        {
                            Id = 8,
                            IndexId = 0,
                            TextUrl1 = "Other.html",
                            Title = "Other"
                        },
                        new
                        {
                            Id = 9,
                            IndexId = 2,
                            TextUrl1 = "DrawApi.html",
                            Title = "DrawApi"
                        },
                        new
                        {
                            Id = 10,
                            IndexId = 2,
                            TextUrl1 = "Draw.html",
                            Title = "Draw"
                        },
                        new
                        {
                            Id = 11,
                            IndexId = 2,
                            TextUrl1 = "DrawBox.html",
                            Title = "DrawBox"
                        },
                        new
                        {
                            Id = 12,
                            IndexId = 2,
                            TextUrl1 = "Element.html",
                            Title = "Element"
                        },
                        new
                        {
                            Id = 13,
                            IndexId = 2,
                            TextUrl1 = "ElementType.html",
                            Title = "ElementType"
                        },
                        new
                        {
                            Id = 14,
                            IndexId = 2,
                            TextUrl1 = "Layer.html",
                            Title = "Layer"
                        },
                        new
                        {
                            Id = 15,
                            IndexId = 2,
                            TextUrl1 = "Pen.html",
                            Title = "Pen"
                        },
                        new
                        {
                            Id = 16,
                            IndexId = 2,
                            TextUrl1 = "PenStyles.html",
                            Title = "PenStyles"
                        },
                        new
                        {
                            Id = 17,
                            IndexId = 2,
                            TextUrl1 = "Point.html",
                            Title = "Point"
                        },
                        new
                        {
                            Id = 18,
                            IndexId = 2,
                            TextUrl1 = "PointType.html",
                            Title = "PointType"
                        },
                        new
                        {
                            Id = 19,
                            IndexId = 2,
                            TextUrl1 = "Radius.html",
                            Title = "Radius"
                        },
                        new
                        {
                            Id = 20,
                            IndexId = 2,
                            TextUrl1 = "SSAngle.html",
                            Title = "SSAngle"
                        },
                        new
                        {
                            Id = 21,
                            IndexId = 3,
                            TextUrl1 = "DrawGeo.html",
                            Title = "DrawGeo"
                        },
                        new
                        {
                            Id = 22,
                            IndexId = 3,
                            TextUrl1 = "Geo.html",
                            Title = "Geo"
                        },
                        new
                        {
                            Id = 23,
                            IndexId = 4,
                            TextUrl1 = "DrawAuth.html",
                            Title = "DrawAuth"
                        },
                        new
                        {
                            Id = 24,
                            IndexId = 4,
                            TextUrl1 = "User.html",
                            Title = "User"
                        },
                        new
                        {
                            Id = 25,
                            IndexId = 4,
                            TextUrl1 = "Auth.html",
                            Title = "Auth"
                        },
                        new
                        {
                            Id = 26,
                            IndexId = 1,
                            TextUrl1 = "DrawCAD.html",
                            Title = "DrawCAD"
                        });
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Web.SubTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BaseTitleId")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<string>("Explanation")
                        .HasColumnType("longtext");

                    b.Property<string>("GifUrl")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Header")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("IndexId")
                        .HasColumnType("int");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ResponeseType")
                        .HasColumnType("longtext");

                    b.Property<string>("Return")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortcutUrl1")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortcutUrl2")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortcutUrl3")
                        .HasColumnType("longtext");

                    b.Property<string>("TextUrl1")
                        .HasColumnType("longtext");

                    b.Property<string>("TextUrl2")
                        .HasColumnType("longtext");

                    b.Property<string>("TextUrl3")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BaseTitleId");

                    b.ToTable("SubTitles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseTitleId = 1,
                            GifUrl = "line.gif",
                            IndexId = 0,
                            LogoUrl = "Line.png",
                            ShortcutUrl1 = "l",
                            ShortcutUrl2 = "enter",
                            TextUrl1 = "Line.html",
                            Title = "Line"
                        },
                        new
                        {
                            Id = 2,
                            BaseTitleId = 1,
                            GifUrl = "polyline.gif",
                            IndexId = 0,
                            LogoUrl = "polyline.png",
                            ShortcutUrl1 = "p",
                            ShortcutUrl2 = "o",
                            ShortcutUrl3 = "enter",
                            TextUrl1 = "Polyline.html",
                            Title = "Polyline"
                        },
                        new
                        {
                            Id = 3,
                            BaseTitleId = 1,
                            GifUrl = "rectangle.gif",
                            IndexId = 0,
                            LogoUrl = "Rectangle.png",
                            ShortcutUrl1 = "r",
                            ShortcutUrl2 = "enter",
                            TextUrl1 = "Rectangle.html",
                            Title = "Rectangle"
                        },
                        new
                        {
                            Id = 4,
                            BaseTitleId = 1,
                            GifUrl = "centerpointcircle.gif",
                            IndexId = 0,
                            LogoUrl = "CenterPointCircle.png",
                            ShortcutUrl1 = "c",
                            ShortcutUrl2 = "enter",
                            TextUrl1 = "Circle Center Point.html",
                            Title = "Circle Center Point"
                        },
                        new
                        {
                            Id = 5,
                            BaseTitleId = 1,
                            GifUrl = "treepointcircle.gif",
                            IndexId = 0,
                            LogoUrl = "treepointcircle.png",
                            TextUrl1 = "Circle Tree Point.html",
                            Title = "Circle Tree Point"
                        },
                        new
                        {
                            Id = 6,
                            BaseTitleId = 1,
                            GifUrl = "twopointcircle.gif",
                            IndexId = 0,
                            LogoUrl = "TwoPointCircle.png",
                            TextUrl1 = "Circle Two Point.html",
                            Title = "Circle Two Point"
                        },
                        new
                        {
                            Id = 7,
                            BaseTitleId = 1,
                            GifUrl = "centerradiuscircle.gif",
                            IndexId = 0,
                            LogoUrl = "Circle.png",
                            TextUrl1 = "Circle Center Radius.html",
                            Title = "Circle Center Radius"
                        },
                        new
                        {
                            Id = 8,
                            BaseTitleId = 1,
                            GifUrl = "treepointarc.gif",
                            IndexId = 0,
                            LogoUrl = "treepointarc.png",
                            ShortcutUrl1 = "a",
                            ShortcutUrl2 = "enter",
                            TextUrl1 = "Arc Tree Point.html",
                            Title = "Arc Tree Point"
                        },
                        new
                        {
                            Id = 9,
                            BaseTitleId = 1,
                            GifUrl = "twopointarc.gif",
                            IndexId = 0,
                            LogoUrl = "TwoPointCenterArc.png",
                            TextUrl1 = "Arc Two Point.html",
                            Title = "Arc Two Point"
                        },
                        new
                        {
                            Id = 10,
                            BaseTitleId = 1,
                            GifUrl = "ellipse.gif",
                            IndexId = 0,
                            LogoUrl = "Ellips.png",
                            ShortcutUrl1 = "e",
                            ShortcutUrl2 = "enter",
                            TextUrl1 = "Ellipse.html",
                            Title = "Ellipse"
                        },
                        new
                        {
                            Id = 11,
                            BaseTitleId = 2,
                            GifUrl = "move.gif",
                            IndexId = 0,
                            LogoUrl = "move.png",
                            ShortcutUrl1 = "m",
                            ShortcutUrl2 = "enter",
                            TextUrl1 = "Move.html",
                            Title = "Move"
                        },
                        new
                        {
                            Id = 12,
                            BaseTitleId = 2,
                            GifUrl = "copy.gif",
                            IndexId = 0,
                            LogoUrl = "Copy.png",
                            ShortcutUrl1 = "c",
                            ShortcutUrl2 = "o",
                            ShortcutUrl3 = "enter",
                            TextUrl1 = "Copy.html",
                            Title = "Copy"
                        },
                        new
                        {
                            Id = 13,
                            BaseTitleId = 2,
                            GifUrl = "rotate.gif",
                            IndexId = 0,
                            LogoUrl = "Rotate.png",
                            ShortcutUrl1 = "r",
                            ShortcutUrl2 = "o",
                            ShortcutUrl3 = "enter",
                            TextUrl1 = "Rotate.html",
                            Title = "Rotate"
                        },
                        new
                        {
                            Id = 14,
                            BaseTitleId = 2,
                            GifUrl = "scale.gif",
                            IndexId = 0,
                            LogoUrl = "Scale.png",
                            ShortcutUrl1 = "s",
                            ShortcutUrl2 = "enter",
                            TextUrl1 = "Scale.html",
                            Title = "Scale"
                        },
                        new
                        {
                            Id = 15,
                            BaseTitleId = 2,
                            GifUrl = "mirror.gif",
                            IndexId = 0,
                            LogoUrl = "Mirror.png",
                            ShortcutUrl1 = "m",
                            ShortcutUrl2 = "i",
                            ShortcutUrl3 = "enter",
                            TextUrl1 = "Mirror.html",
                            Title = "Mirror"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.DrawBox", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Draw.User", "User")
                        .WithMany("DrawBoxs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.DrawCommand", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Draw.DrawBox", "DrawBox")
                        .WithMany("DrawCommands")
                        .HasForeignKey("DrawBoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DrawBox");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.Element", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Draw.Layer", "Layer")
                        .WithMany("Elements")
                        .HasForeignKey("LayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Draw.Entities.Concrete.Draw.Pen", "Pen")
                        .WithMany("Elements")
                        .HasForeignKey("PenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Draw.Entities.Concrete.Draw.ElementType", "Type")
                        .WithMany("Elements")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Layer");

                    b.Navigation("Pen");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.Layer", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Draw.DrawBox", "DrawBox")
                        .WithMany("Layers")
                        .HasForeignKey("DrawBoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Draw.Entities.Concrete.Draw.Pen", "Pen")
                        .WithMany("Layers")
                        .HasForeignKey("PenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DrawBox");

                    b.Navigation("Pen");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.Pen", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Draw.PenStyle", "PenStyle")
                        .WithMany("Pens")
                        .HasForeignKey("PenStyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Draw.Entities.Concrete.Draw.User", "User")
                        .WithMany("Pens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PenStyle");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.Point", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Draw.Element", "Element")
                        .WithMany("Points")
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Draw.Entities.Concrete.Draw.PointType", "PointType")
                        .WithMany("Points")
                        .HasForeignKey("PointTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");

                    b.Navigation("PointType");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.Radius", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Draw.Element", "Element")
                        .WithMany("Radiuses")
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.SSAngle", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Draw.Element", "Element")
                        .WithMany("SSAngles")
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Web.BaseTitle", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Web.MainTitle", "MainTitle")
                        .WithMany("BaseTitles")
                        .HasForeignKey("MainTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainTitle");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Web.SubTitle", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Web.BaseTitle", "BaseTitle")
                        .WithMany("SubTitles")
                        .HasForeignKey("BaseTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseTitle");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Draw.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Draw.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Draw.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Draw.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Draw.Entities.Concrete.Draw.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Draw.Entities.Concrete.Draw.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.DrawBox", b =>
                {
                    b.Navigation("DrawCommands");

                    b.Navigation("Layers");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.Element", b =>
                {
                    b.Navigation("Points");

                    b.Navigation("Radiuses");

                    b.Navigation("SSAngles");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.ElementType", b =>
                {
                    b.Navigation("Elements");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.Layer", b =>
                {
                    b.Navigation("Elements");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.Pen", b =>
                {
                    b.Navigation("Elements");

                    b.Navigation("Layers");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.PenStyle", b =>
                {
                    b.Navigation("Pens");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.PointType", b =>
                {
                    b.Navigation("Points");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Draw.User", b =>
                {
                    b.Navigation("DrawBoxs");

                    b.Navigation("Pens");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Web.BaseTitle", b =>
                {
                    b.Navigation("SubTitles");
                });

            modelBuilder.Entity("Draw.Entities.Concrete.Web.MainTitle", b =>
                {
                    b.Navigation("BaseTitles");
                });
#pragma warning restore 612, 618
        }
    }
}
